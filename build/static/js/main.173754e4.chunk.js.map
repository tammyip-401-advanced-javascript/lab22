{"version":3,"sources":["components/Header.js","components/Footer.js","components/Counter.js","App.js","index.js"],"names":["Header","React","Component","Footer","Counter","props","handleUp","e","count","state","updateCounter","handleDown","polarity","this","setState","classes","join","className","onClick","App","Fragment","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"qOAYeA,E,uKARP,OACI,gCACI,mD,GAJKC,IAAMC,WCMZC,E,uKAJP,OAAO,8D,GAFMF,IAAMC,WC4CZE,E,kDA3CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,SAAW,SAACC,GACR,IAAIC,EAAQ,EAAKC,MAAMD,MAAQ,EAC/B,EAAKE,cAAcF,IAPJ,EAUnBG,WAAa,SAACJ,GACV,IAAIC,EAAQ,EAAKC,MAAMD,MAAQ,EAC/B,EAAKE,cAAcF,IAVnB,EAAKC,MAAQ,CAAED,MAAO,GAFP,E,0DAeLA,GACV,IAAII,EAAW,GACXJ,EAAQ,EACRI,EAAW,WACJJ,EAAQ,IACfI,EAAW,YAEfC,KAAKC,SAAS,CAAEN,QAAOI,e,+BAIvB,IAAIG,EAAU,CAAC,QAASF,KAAKJ,MAAMG,UAAUI,KAAK,KAClD,OACI,6BAASC,UAAU,WACf,0BAAMA,UAAU,eAAeC,QAASL,KAAKF,YACxC,IADL,IAEM,KAEN,0BAAMM,UAAWF,GAAUF,KAAKJ,MAAMD,OACtC,0BAAMS,UAAU,aAAaC,QAASL,KAAKP,UACtC,IADL,IAEM,U,GArCAL,IAAMC,WCkBbiB,G,6KAVP,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANEnB,IAAMC,YCHlBmB,E,uKAEE,OAAO,kBAAC,EAAD,U,GAFIpB,IAAMC,WAMnBoB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUJ,I","file":"static/js/main.173754e4.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header>\n                <h1>Counters R Fun</h1>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Footer extends React.Component {\n    render() {\n        return <footer>&copy; 2018 Code Fellows</footer>;\n    }\n}\n\nexport default Footer;\n","import React from 'react';\n\nclass Counter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { count: 0 };\n    }\n\n    handleUp = (e) => {\n        let count = this.state.count + 1;\n        this.updateCounter(count);\n    };\n\n    handleDown = (e) => {\n        let count = this.state.count - 1;\n        this.updateCounter(count);\n    };\n\n    updateCounter(count) {\n        let polarity = '';\n        if (count > 0) {\n            polarity = 'positive';\n        } else if (count < 0) {\n            polarity = 'negative';\n        }\n        this.setState({ count, polarity });\n    }\n\n    render() {\n        let classes = ['count', this.state.polarity].join(' ');\n        return (\n            <section className='counter'>\n                <span className='down clicker' onClick={this.handleDown}>\n                    {' '}\n                    -{' '}\n                </span>\n                <span className={classes}>{this.state.count}</span>\n                <span className='up clicker' onClick={this.handleUp}>\n                    {' '}\n                    +{' '}\n                </span>\n            </section>\n        );\n    }\n}\n\nexport default Counter;\n","import React from 'react';\n\nimport Header from './components/Header.js';\nimport Footer from './components/Footer.js';\nimport Counter from './components/Counter.js';\n\nimport './styles.scss';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n                <Counter />\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.js';\n\nclass Main extends React.Component {\n    render() {\n        return <App />;\n    }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}